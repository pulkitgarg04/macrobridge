version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: macrobridge
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  client:
    build: ./client
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_HOOKS_URL=http://localhost:8002
    depends_on:
      - server

  server:
    build: ./server
    ports:
      - "4000:4000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/macrobridge
      - JWT_SECRET=your_jwt_secret

    depends_on:
      - postgres
      - kafka

  processor:
    build: ./processor
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/macrobridge
      - KAFKA_BROKER=kafka:9092
    depends_on:
      - postgres
      - kafka

  worker:
    build: ./worker
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/macrobridge
      - SMTP_USERNAME="your_smtp_email"
      - SMTP_PASSWORD="your_smtp_password"
      - SMTP_ENDPOINT="your_smtp_endpoint"
      - SOLANA_PRIVATE_KEY="your_solana_key"
    depends_on:
      - postgres
      - kafka

  hooks:
    build: ./hooks
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/macrobridge
      - KAFKA_BROKER=kafka:9092
    depends_on:
      - postgres
      - kafka

volumes:
  pgdata: